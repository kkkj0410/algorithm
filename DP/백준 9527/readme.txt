## 문제 유형

- DP

## 문제 접근

- 답
    - A~B 사이의 값을 이진수로 만들어서 얻을 수 있는 1의 개수 총합
- 주어지는 정보
    - A, B 의 최대 크기 10^16
- 정보 정리
    - 숫자 최대 크기 10^16
        - 순차 탐색 불가능
        - logN의 알고리즘을 사용해야 함
    - 후보
        - 이진 탐색
            - A, B 사이 숫자들의 1의 개수를 전부 알아야하므로 부적합
        - DP
            - 적합
            - 이진수는 자릿수가 올라갈 때마다 2의 지수만큼 커지는 규칙성을 가짐
            - 해당 규칙성을 이용하여, n자리수의 이진수가 가지는 1의 개수 총합을 dp로 나타낼 수 있다
            - 참고
                - https://tussle.tistory.com/1022
- 풀이
    - dp[n]
        - 1~n 자리수의 이진수가 가질 수 있는 이진수 값 종류에서 1의 개수를 전부 더함
        - dp[n] = dp[n-1] * (2^(n-1))
    - resolve(long N)
        - return : 0~N의 값에 대한 모든 이진수 값에서 1의 개수 총합
        - 방법
            - for(int cur = size~1) (N의 제일 왼쪽 비트 ~ N의 제일 오른쪽 비트)
                - cur비트가 존재함으로써 만들어질 수 있는 1의 총합 개수를 구한다.
                - https://tussle.tistory.com/1022
