## 문제 유형

- 시뮬레이션

## 문제 접근

- 답
    - 치즈가 전부 녹기까지 걸리는 시간
- 주어지는 정보
    - 맵 크기 최대 10000 (N*M)
    - 맨 바깥 테두리는 치즈가 들어올 수 없다.
    - 치즈 = 1, 여백 = 0
- 후보
    - 시뮬레이션
        - 가능
        - 이유
            - 맵이 충분히 작음
            - 각 시간마다 치즈에 대한 시행 횟수는 최대 (N*M)*2번 정도 밖에 되지 않음(문제에서 주어지는 대로 연산을 진행할 시)
- 풀이
    - 목적
        - 치즈가 녹기까지 걸리는 시간을 구하자
    - 단계
        - 자료구조
            - int[][] map
                - 문제에서 주어지는 치즈 맵을 기록한다.
            - int[][] copyMap
                - 치즈 녹이기 연산마다 map을 복사한다
            - boolean[][] visited
                - 바깥 공기에서부터 치즈의 접촉 시, true로 체크한다
        - 함수
            - bfs()
                - 녹을 치즈가 없으면 true를 반환한다.
                - 단계
                    - map을 copyMap에 복사한다
                    - copyMap에 0,0 좌표부터 바깥 공기를 2로 기록한다.(0,0 좌표부터 하는 이유는 바깥 테두리 전부 치즈가 없기 때문에 바깥에서부터 탐색하는 것)
                    - 탐색 도중 치즈를 만날 시, visited[치즈 Y][치즈 X] = true
                    - 탐색 도중 해당 치즈를 또 만날 시, 해당 치즈를 map에서  없애버림
                    - 녹은 치즈가 하나도 없다면 false, 아니면 true
